b1 <- batchSize(chain1, method = "bartlett")
b2 <- batchSize(chain2, method = "bartlett")
b <- (b1+b2)/2
c1.cen.loc <- scale(chain1, scale = FALSE)  ## X_st - bar(X)_s
c2.cen.loc <- scale(chain2, scale = FALSE)
global.mean <- colMeans(rbind(chain1, chain2))
c1.cen <- scale(chain1, center = global.mean, scale =FALSE)
c2.cen <- scale(chain2, center = global.mean, scale =FALSE)
sve1 <- mSVEfft(A = c1.cen.loc, b = b)
sve2 <- mSVEfft(A = c2.cen.loc, b = b)
asv.samp[,,j] <- (sve1 + sve2)/2
rsve1 <- mSVEfft(A = c1.cen, b = b)
rsve2 <- mSVEfft(A = c2.cen, b = b)
rsv.samp[,,j] <- (rsve1+rsve2)/2
}
rsv.sigma11 <- rsv.samp[1,1,]
asv.sigma11 <- asv.samp[1,1,]
density.rsv.sigma11 <- stats::density(rsv.sigma11)
density.asv.sigma11 <- stats::density(asv.sigma11)
rsv.sigma22 <- rsv.samp[2,2,]
asv.sigma22 <- asv.samp[2,2,]
density.rsv.sigma22 <- stats::density(rsv.sigma22)
density.asv.sigma22 <- stats::density(asv.sigma22)
####################Variance of Y-component for RSV and ASV#############################
pdf(file = "C:/Users/DELL/Documents/GitHub/Replicated-Spectral-Variance-Estimator/Sigma_11_n1.pdf")
plot(density.rsv.sigma11, col = "red", xlab = "Variance of X-component", main = paste("Density plot for variation of X-component, N=",N))
lines(density.asv.sigma11, col = "blue")
legend("topright", legend=c("RSV", "ASV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
########################################################################################
####################Variance of Y-component for RSV and ASV#############################
pdf(file = "C:/Users/DELL/Documents/GitHub/Replicated-Spectral-Variance-Estimator/Sigma_22_n1.pdf")
plot(density.rsv.sigma22, col = "red", xlab = "Variance of Y-component", main = paste("Density plot for variation of Y-component, N=",N))
lines(density.asv.sigma22, col = "blue")
legend("topright", legend=c("RSV", "ASV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#########################################################################################
det.rsv <- rep(0,N)
det.asv <- rep(0,N)
for (i in 1:N){
det.rsv[i] <- det(rsv.samp[,,i])
det.asv[i] <- det(asv.samp[,,i])
}
density.rsv.det <- stats::density(det.rsv)
density.asv.det <- stats::density(det.asv)
####################determinant comparison for RSV and ASV################################
pdf(file = "C:/Users/DELL/Documents/GitHub/Replicated-Spectral-Variance-Estimator/determinant_n1.pdf")
plot(density.rsv.det, col = "red", xlab = "Determinant of covariance matrix", main = paste("Density plot for determinant of estimated variance, N=",N))
lines(density.asv.sigma22, col = "blue")
legend("topright", legend=c("RSV", "ASV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
##########################################################################################
n2 <- 50000
x1.samp <- rep(0,n2)
y1.samp <- rep(0,n2)
x2.samp <- rep(0,n2)
y2.samp <- rep(0,n2)
x1.samp[1] <- 15
y1.samp[1] <- 1
x2.samp[1] <- 1
y2.samp[1] <- 15
for (i in 2:n2){
x1.samp[i] <- rnorm(1,mean = C/(1 + y1.samp[i-1]^2), sd = sqrt(1/(1 + y1.samp[i-1]^2)))
y1.samp[i] <- rnorm(1,mean = C/(1 + x1.samp[i]^2), sd = sqrt(1/(1 + x1.samp[i]^2)))
x2.samp[i] <- rnorm(1,mean = C/(1 + y2.samp[i-1]^2), sd = sqrt(1/(1 + y2.samp[i-1]^2)))
y2.samp[i] <- rnorm(1,mean = C/(1 + x2.samp[i]^2), sd = sqrt(1/(1 + x2.samp[i]^2)))
}
pdf(file = "C:/Users/DELL/Documents/GitHub/Replicated-Spectral-Variance-Estimator/Markov-chains-scatter-plot_n2.pdf")
plot(x1.samp, y1.samp, col = rep("red",n2), xlim = c(-2,20), ylim = c(-2,20), main = paste("Scatter plot of two Markov chains, n = ", n2), xlab = "X", ylab = "Y")
points(x2.samp, y2.samp, col = rep("green",n2))
dev.off()
chain1 <- cbind(x1.samp, y1.samp)
chain2 <- cbind(x2.samp, y2.samp)
colnames(chain1) <- c("X", "Y")
colnames(chain2) <- c("X", "Y")
#truncation point
b1 <- batchSize(chain1, method = "bartlett")
b2 <- batchSize(chain2, method = "bartlett")
b <- (b1+b2)/2
#chain centered by their individual mean
c1.cen.loc <- scale(chain1, scale = FALSE)  ## X_st - bar(X)_s
c2.cen.loc <- scale(chain2, scale = FALSE)
#chains centered by global mean
global.mean.n2 <- colMeans(rbind(chain1, chain2))
c1.cen <- scale(chain1, center = global.mean.n2, scale =FALSE)
c2.cen <- scale(chain2, center = global.mean.n2, scale =FALSE)
#ASV estimator
sve1 <- mSVEfft(A = c1.cen.loc, b = b)
sve2 <- mSVEfft(A = c2.cen.loc, b = b)
(asv_n2 <- (sve1 + sve2)/2)
# RSV estimator
rsve1 <- mSVEfft(A = c1.cen, b = b)
rsve2 <- mSVEfft(A = c2.cen, b = b)
(rsv_n2 <- (rsve1 + rsve2)/2)
N <- 100
rsv.samp <- array(0, dim = c(2,2,N))
asv.samp <- array(0, dim = c(2,2,N))
for (j in 1:N){
x1.samp[1] <- 15
y1.samp[1] <- 1
x2.samp[1] <- 1
y2.samp[1] <- 15
for (i in 2:n2){
x1.samp[i] <- rnorm(1,mean = C/(1 + y1.samp[i-1]^2), sd = sqrt(1/(1 + y1.samp[i-1]^2)))
y1.samp[i] <- rnorm(1,mean = C/(1 + x1.samp[i]^2), sd = sqrt(1/(1 + x1.samp[i]^2)))
x2.samp[i] <- rnorm(1,mean = C/(1 + y2.samp[i-1]^2), sd = sqrt(1/(1 + y2.samp[i-1]^2)))
y2.samp[i] <- rnorm(1,mean = C/(1 + x2.samp[i]^2), sd = sqrt(1/(1 + x2.samp[i]^2)))
}
chain1 <- cbind(x1.samp, y1.samp)
chain2 <- cbind(x2.samp, y2.samp)
b1 <- batchSize(chain1, method = "bartlett")
b2 <- batchSize(chain2, method = "bartlett")
b <- (b1+b2)/2
c1.cen.loc <- scale(chain1, scale = FALSE)  ## X_st - bar(X)_s
c2.cen.loc <- scale(chain2, scale = FALSE)
global.mean <- colMeans(rbind(chain1, chain2))
c1.cen <- scale(chain1, center = global.mean, scale =FALSE)
c2.cen <- scale(chain2, center = global.mean, scale =FALSE)
sve1 <- mSVEfft(A = c1.cen.loc, b = b)
sve2 <- mSVEfft(A = c2.cen.loc, b = b)
asv.samp[,,j] <- (sve1 + sve2)/2
rsve1 <- mSVEfft(A = c1.cen, b = b)
rsve2 <- mSVEfft(A = c2.cen, b = b)
rsv.samp[,,j] <- (rsve1+rsve2)/2
}
rsv.sigma11 <- rsv.samp[1,1,]
asv.sigma11 <- asv.samp[1,1,]
density.rsv.sigma11 <- stats::density(rsv.sigma11)
density.asv.sigma11 <- stats::density(asv.sigma11)
rsv.sigma22 <- rsv.samp[2,2,]
asv.sigma22 <- asv.samp[2,2,]
density.rsv.sigma22 <- stats::density(rsv.sigma22)
density.asv.sigma22 <- stats::density(asv.sigma22)
####################Variance of Y-component for RSV and ASV#############################
pdf(file = "C:/Users/DELL/Documents/GitHub/Replicated-Spectral-Variance-Estimator/Sigma_11_n2.pdf")
plot(density.rsv.sigma11, col = "red", xlab = "Variance of X-component", main = paste("Density plot for variation of X-component, N=",N))
lines(density.asv.sigma11, col = "blue")
legend("topright", legend=c("RSV", "ASV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
########################################################################################
####################Variance of Y-component for RSV and ASV#############################
pdf(file = "C:/Users/DELL/Documents/GitHub/Replicated-Spectral-Variance-Estimator/Sigma_22_n2.pdf")
plot(density.rsv.sigma22, col = "red", xlab = "Variance of Y-component", main = paste("Density plot for variation of Y-component, N=",N))
lines(density.asv.sigma22, col = "blue")
legend("topright", legend=c("RSV", "ASV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#########################################################################################
det.rsv <- rep(0,N)
det.asv <- rep(0,N)
for (i in 1:N){
det.rsv[i] <- det(rsv.samp[,,i])
det.asv[i] <- det(asv.samp[,,i])
}
density.rsv.det <- stats::density(det.rsv)
density.asv.det <- stats::density(det.asv)
####################determinant comparison for RSV and ASV################################
pdf(file = "C:/Users/DELL/Documents/GitHub/Replicated-Spectral-Variance-Estimator/determinant_n2.pdf")
plot(density.rsv.det, col = "red", xlab = "Determinant of covariance matrix", main = paste("Density plot for determinant of estimated variance, N=",N))
lines(density.asv.sigma22, col = "blue")
legend("topright", legend=c("RSV", "ASV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
##########################################################################################
hotelling_t2_stat <- function(x,mean,sigma,n){
return(n*t(mean - x) %*% solve(sigma) %*% (mean - x))
}
critical.95.n1 <- qf(.95, df1 = 2, df2 = n1-2)
coverage.rsv <- 0
coverage.asv <- 0
n <- 1000
x1.samp <- rep(0,n1)
y1.samp <- rep(0,n1)
x2.samp <- rep(0,n1)
y2.samp <- rep(0,n1)
for (j in 1:n){
x1.samp[1] <- 15
y1.samp[1] <- 1
x2.samp[1] <- 1
y2.samp[1] <- 15
for (i in 2:n1){
x1.samp[i] <- rnorm(1,mean = C/(1 + y1.samp[i-1]^2), sd = sqrt(1/(1 + y1.samp[i-1]^2)))
y1.samp[i] <- rnorm(1,mean = C/(1 + x1.samp[i]^2), sd = sqrt(1/(1 + x1.samp[i]^2)))
x2.samp[i] <- rnorm(1,mean = C/(1 + y2.samp[i-1]^2), sd = sqrt(1/(1 + y2.samp[i-1]^2)))
y2.samp[i] <- rnorm(1,mean = C/(1 + x2.samp[i]^2), sd = sqrt(1/(1 + x2.samp[i]^2)))
}
chain1 <- cbind(x1.samp, y1.samp)
chain2 <- cbind(x2.samp, y2.samp)
mean.statistic <- colMeans(rbind(chain1, chain2))
t2_stat.rsv <- hotelling_t2_stat(mean.statistic,true.mean.py,rsv_n1,2*n1)   ##alternatively use true mean
t2_stat.asv <- hotelling_t2_stat(mean.statistic,true.mean.py,asv_n1,2*n1)   ##calculated using pracma
if (t2_stat.rsv <= critical.95.n1) {
coverage.rsv = coverage.rsv+1
}
if (t2_stat.asv <= critical.95.n1){
coverage.asv = coverage.asv+1
}
}
(coverage.rsv/n)
(coverage.asv/n)
load("blog_cov_sq")
load("Downloads/blog_cov_sq")
load("Downloads/blog_cov_sq")
setwd("~/GitHub/Replicated-Spectral-Variance-Estimator")
set.seed(1)
library(fields)
library(scatterplot3d)
library(cubature)
library(graphics)
library(pracma)
library(Rcpp)
library(RcppArmadillo)
library(fftwtools)
library(mcmcse)
library(stats)
sourceCpp("lag.cpp")
source("functions.R")
set.seed(1)
library(fields)
library(scatterplot3d)
library(cubature)
library(graphics)
library(pracma)
library(Rcpp)
library(RcppArmadillo)
library(fftwtools)
library(mcmcse)
library(stats)
sourceCpp("lag.cpp")
source("functions.R")
A <- 1
C <- 7
freq <- 1e3
start <- matrix(c(2*C,1,1,2*C),2,2)
check.pts <- c(1e3,1e4)
#Load the 1000 replications of ASV, RSV and coverage probabilities for each value of nsim
r <- length(check.pts)
#Scatter plot of m Markov chains
nsim <- check.pts[1]
chain1 <- markov.chain(A,C,nsim,start[1,])
chain2 <- markov.chain(A,C,nsim,start[2,])
chain1
plot(chain1[,1], chain1[,2], col = "red", xlim = c(-2,2*C), ylim = c(-2,2*C), main = paste("Scatter plot of two Markov chains, n = ", nsim), xlab = "X", ylab = "Y")
points(chain2[,1], chain2[,2], col = "green")
plot(density(asv.samp[1,1,]), col="red")
#Comparitative density plots of ASV and RSV
load("out1.Rdata")
plot(density(asv.samp[1,1,]), col="red")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
lines(density(rsv.samp[1,1,]), col="blue")
mean(asv[1,1,])
mean(asv.samp[1,1,])
sd(asv.samp[1,1,])
mean(rsv.samp[1,1,])
sd(rsv.samp[1,1,])
plot(density(asv.samp[1,1,]), col="red")
plot(density(rsv.samp[1,1,]), col="red")
plot(density(asv.samp[1,1,]), col="red")
a<- density(asv.samp[1,1,])
plot(a)
plot(density(rsv.samp[1,1,]), col="red")
plot(density(asv.samp[1,1,]), col="red")
A <- 1
C <- 7
freq <- 1e3
start <- matrix(c(2*C,1,1,2*C),2,2)
check.pts <- c(1e3,1e4)
#Load the 1000 replications of ASV, RSV and coverage probabilities for each value of nsim
r <- length(check.pts)
for (i in 1:r){
#Scatter plot of m Markov chains
nsim <- check.pts[i]
chain1 <- markov.chain(A,C,nsim,start[1,])
chain2 <- markov.chain(A,C,nsim,start[2,])
#Scatter plot
pdf(file = paste("scatter_plot_",i,".pdf", sep = ""))
plot(chain1[,1], chain1[,2], col = "red", xlim = c(-2,2*C), ylim = c(-2,2*C), main = paste("Scatter plot of two Markov chains, n = ", nsim), xlab = "X", ylab = "Y")
points(chain2[,1], chain2[,2], col = "green")
dev.off()
#Comparitative density plots of ASV and RSV
load(file = paste("out",i,".Rdata", sep = ""))
#Sigma_11
pdf(file = paste("out",i,"_sigma11.pdf", sep = ""))
plot(density(asv.samp[1,1,]), col="red")
lines(density(rsv.samp[1,1,]), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#Sigma_22
pdf(file = paste("out",i,"_sigma22.pdf", sep = ""))
plot(density(asv.samp[2,2,]), col="red")
lines(density(rsv.samp[2,2,]), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#Determinant
det.rsv <- rep(0,freq)
det.asv <- rep(0,freq)
for (i in 1:freq){
det.rsv[i] <- det(rsv.samp[,,i])
det.asv[i] <- det(asv.samp[,,i])
}
pdf(file = paste("out",i,"_det.pdf", sep = ""))
plot(density(det.asv), col="red")
lines(density(det.rsv), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
}
A <- 1
C <- 7
freq <- 1e3
start <- matrix(c(2*C,1,1,2*C),2,2)
check.pts <- c(1e3,1e4)
#Load the 1000 replications of ASV, RSV and coverage probabilities for each value of nsim
r <- length(check.pts)
for (i in 1:r){
#Scatter plot of m Markov chains
nsim <- check.pts[i]
chain1 <- markov.chain(A,C,nsim,start[1,])
chain2 <- markov.chain(A,C,nsim,start[2,])
#Scatter plot
pdf(file = paste("scatter_plot_",i,".pdf", sep = ""))
plot(chain1[,1], chain1[,2], col = "red", xlim = c(-2,2*C), ylim = c(-2,2*C), main = paste("Scatter plot of two Markov chains, n = ", nsim), xlab = "X", ylab = "Y")
points(chain2[,1], chain2[,2], col = "green")
dev.off()
#Comparitative density plots of ASV and RSV
load(file = paste("out",i,".Rdata", sep = ""))
#Sigma_11
pdf(file = paste("out",i,"_sigma11.pdf", sep = ""))
plot(density(asv.samp[1,1,]), col="red")
lines(density(rsv.samp[1,1,]), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#Sigma_22
pdf(file = paste("out",i,"_sigma22.pdf", sep = ""))
plot(density(asv.samp[2,2,]), col="red")
lines(density(rsv.samp[2,2,]), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#Determinant
det.rsv <- rep(0,freq)
det.asv <- rep(0,freq)
for (i in 1:freq){
det.rsv[i] <- det(rsv.samp[,,i])
det.asv[i] <- det(asv.samp[,,i])
}
pdf(file = paste("out",i,"_det.pdf", sep = ""))
plot(density(det.asv), col="red")
lines(density(det.rsv), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
}
for (i in 1:r){
#Scatter plot of m Markov chains
nsim <- check.pts[i]
chain1 <- markov.chain(A,C,nsim,start[1,])
chain2 <- markov.chain(A,C,nsim,start[2,])
#Scatter plot
pdf(file = paste("scatter_plot_",i,".pdf", sep = ""))
plot(chain1[,1], chain1[,2], col = "red", xlim = c(-2,2*C), ylim = c(-2,2*C), main = paste("Scatter plot of two Markov chains, n = ", nsim), xlab = "X", ylab = "Y")
points(chain2[,1], chain2[,2], col = "green")
dev.off()
#Comparitative density plots of ASV and RSV
load(file = paste("out",i,".Rdata", sep = ""))
#Sigma_11
pdf(file = paste("out",i,"_sigma11.pdf", sep = ""))
plot(density(asv.samp[1,1,]), col="red")
lines(density(rsv.samp[1,1,]), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#Sigma_22
pdf(file = paste("out",i,"_sigma22.pdf", sep = ""))
plot(density(asv.samp[2,2,]), col="red")
lines(density(rsv.samp[2,2,]), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#Determinant
det.rsv <- rep(0,freq)
det.asv <- rep(0,freq)
for (i in 1:freq){
det.rsv[i] <- det(rsv.samp[,,i])
det.asv[i] <- det(asv.samp[,,i])
}
pdf(file = paste("out",i,"_det.pdf", sep = ""))
plot(density(det.asv), col="red")
lines(density(det.rsv), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
}
for (i in 1:r){
#Scatter plot of m Markov chains
nsim <- check.pts[i]
chain1 <- markov.chain(A,C,nsim,start[1,])
chain2 <- markov.chain(A,C,nsim,start[2,])
#Scatter plot
pdf(file = paste("scatter_plot_",i,".pdf", sep = ""))
plot(chain1[,1], chain1[,2], col = "red", xlim = c(-2,2*C), ylim = c(-2,2*C), main = paste("Scatter plot of two Markov chains, n = ", nsim), xlab = "X", ylab = "Y")
points(chain2[,1], chain2[,2], col = "green")
dev.off()
#Comparitative density plots of ASV and RSV
load(file = paste("out",i,".Rdata", sep = ""))
#Sigma_11
pdf(file = paste("out",i,"_sigma11.pdf", sep = ""))
plot(density(asv.samp[1,1,]), col="red")
lines(density(rsv.samp[1,1,]), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#Sigma_22
pdf(file = paste("out",i,"_sigma22.pdf", sep = ""))
plot(density(asv.samp[2,2,]), col="red")
lines(density(rsv.samp[2,2,]), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#Determinant
det.rsv <- rep(0,freq)
det.asv <- rep(0,freq)
for (i in 1:freq){
det.rsv[i] <- det(rsv.samp[,,i])
det.asv[i] <- det(asv.samp[,,i])
}
pdf(file = paste("out",i,"_det.pdf", sep = ""))
plot(density(det.asv), col="red")
lines(density(det.rsv), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
}
r
i
for (j in 1:r){
#Scatter plot of m Markov chains
nsim <- check.pts[j]
chain1 <- markov.chain(A,C,nsim,start[1,])
chain2 <- markov.chain(A,C,nsim,start[2,])
#Scatter plot
pdf(file = paste("scatter_plot_",i,".pdf", sep = ""))
plot(chain1[,1], chain1[,2], col = "red", xlim = c(-2,2*C), ylim = c(-2,2*C), main = paste("Scatter plot of two Markov chains, n = ", nsim), xlab = "X", ylab = "Y")
points(chain2[,1], chain2[,2], col = "green")
dev.off()
#Comparitative density plots of ASV and RSV
load(file = paste("out",i,".Rdata", sep = ""))
#Sigma_11
pdf(file = paste("out",i,"_sigma11.pdf", sep = ""))
plot(density(asv.samp[1,1,]), col="red")
lines(density(rsv.samp[1,1,]), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#Sigma_22
pdf(file = paste("out",i,"_sigma22.pdf", sep = ""))
plot(density(asv.samp[2,2,]), col="red")
lines(density(rsv.samp[2,2,]), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#Determinant
det.rsv <- rep(0,freq)
det.asv <- rep(0,freq)
for (i in 1:freq){
det.rsv[i] <- det(rsv.samp[,,i])
det.asv[i] <- det(asv.samp[,,i])
}
pdf(file = paste("out",i,"_det.pdf", sep = ""))
plot(density(det.asv), col="red")
lines(density(det.rsv), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
}
for (i in 1:r){
#Scatter plot of m Markov chains
nsim <- check.pts[i]
chain1 <- markov.chain(A,C,nsim,start[1,])
chain2 <- markov.chain(A,C,nsim,start[2,])
#Scatter plot
pdf(file = paste("scatter_plot_",i,".pdf", sep = ""))
plot(chain1[,1], chain1[,2], col = "red", xlim = c(-2,2*C), ylim = c(-2,2*C), main = paste("Scatter plot of two Markov chains, n = ", nsim), xlab = "X", ylab = "Y")
points(chain2[,1], chain2[,2], col = "green")
dev.off()
#Comparitative density plots of ASV and RSV
load(file = paste("out",i,".Rdata", sep = ""))
#Sigma_11
pdf(file = paste("out",i,"_sigma11.pdf", sep = ""))
plot(density(asv.samp[1,1,]), col="red")
lines(density(rsv.samp[1,1,]), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#Sigma_22
pdf(file = paste("out",i,"_sigma22.pdf", sep = ""))
plot(density(asv.samp[2,2,]), col="red")
lines(density(rsv.samp[2,2,]), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#Determinant
det.rsv <- rep(0,freq)
det.asv <- rep(0,freq)
for (j in 1:freq){
det.rsv[j] <- det(rsv.samp[,,j])
det.asv[j] <- det(asv.samp[,,j])
}
pdf(file = paste("out",i,"_det.pdf", sep = ""))
plot(density(det.asv), col="red")
lines(density(det.rsv), col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
}
#Convergence plots for nsim = 1e3 to nsim=1e5
load(file = "1e3-1e5_RSV_ASV_samp.Rdata")
conv.pts <- seq(1e3,1e6,500)
#Sigma_11
pdf(file = "conv_plot_Sigma_11.pdf")
plot(conv.pts,asv.samp[1,1,], type = "l", col = "red")
lines(conv.pts, rsv.samp[1,1,], col="blue")
legend("topright", legend=c("ASV", "RSV"),col=c("red", "blue"), lty=1, cex=1.2)
dev.off()
#Convergence plots for nsim = 1e3 to nsim=1e5
load(file = "1e3-1e5_RSV_ASV_samp.Rdata")
conv.pts <- seq(1e3,1e6,500)
plot(conv.pts,asv.samp[1,1,], type = "l", col = "red")
lines(conv.pts, rsv.samp[1,1,], col="blue")
